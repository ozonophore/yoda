version: "3"
services:

  webserver:
    image: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./website/build:/usr/share/nginx/html
    depends_on:
#      - backend
      - frontend
      - rabbitmq
    ports:
      - "80:80"

  frontend:
    build:
      context: ./
      dockerfile: website/Dockerfile
    volumes:
      - ./server/webapp/config.yml.prod:/app/config.yml
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    networks:
      - default
      - rabbitmq_go_net

  rabbitmq:
    image: rabbitmq:3.8.9-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

#  frontend:
#    image: plone/plone-frontend:latest
#    environment:
#      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Plone
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend
#
#  backend:
#    image: plone/plone-backend:6.0
#    environment:
#      SITE: Plone
#      RELSTORAGE_DSN: "dbname='plone' user='plone' host='db' password='plone'"
#    ports:
#      - "8080:8080"
#    depends_on:
#      - db
#
#  db:
#    image: postgres
#    environment:
#      POSTGRES_USER: plone
#      POSTGRES_PASSWORD: plone
#      POSTGRES_DB: plone
#    volumes:
#      - data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"

networks:
  default:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge
volumes:
  data: {}