version: "3"
services:

  webserver:
    image: ghcr.io/ozonophore/yoda-website:latest
    environment:
      - BACKEND_HOST=frontend
      - BACKEND_PORT=8080
    depends_on:
      - backend
      - frontend
      - rabbitmq
    ports:
      - "80:80"

  frontend:
    image: ghcr.io/ozonophore/yoda-web:latest
    environment:
      - YODA_SERVER_PORT=8080
      - YODA_SERVER_MQ_URL=amqp://guest:guest@rabbitmq:5672/
      - YODA_DB_DSN=postgres://user:password@database:5432/db?sslmode=disable
    ports:
      - "8080:8080"
    restart: on-failure
    depends_on:
      - rabbitmq
    links:
      - rabbitmq
    networks:
      - default
      - rabbitmq_go_net

  rabbitmq:
    image: rabbitmq:3.8.9-management
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./docker/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    image: ghcr.io/ozonophore/yoda-app
    environment:
      - YODA_DB_DSN=postgres://user:password@database:5432/db?sslmode=disable
      - YODA_SERVER_MQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - database
      - rabbitmq

  database:
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

networks:
  default:
    driver: bridge
  rabbitmq_go_net:
    driver: bridge
volumes:
  data: {}