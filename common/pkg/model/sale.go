// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameSale = "sale"

// Sale mapped from table <sale>
type Sale struct {
	ID                int64     `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	TransactionID     int64     `gorm:"column:transaction_id;not null" json:"transaction_id"`
	Source            string    `gorm:"column:source;not null" json:"source"`
	LastChangeDate    time.Time `gorm:"column:last_change_date;not null" json:"last_change_date"` // Дата обновления информации в сервисе
	LastChangeTime    time.Time `gorm:"column:last_change_time;not null" json:"last_change_time"` // Время обновления информации в сервисе
	SaleDate          time.Time `gorm:"column:sale_date;not null" json:"sale_date"`               // Дата продажи
	SaleTime          time.Time `gorm:"column:sale_time;not null" json:"sale_time"`               // Время продажи
	SupplierArticle   *string   `gorm:"column:supplier_article" json:"supplier_article"`          // Артикул поставщика
	TechSize          *string   `gorm:"column:tech_size" json:"tech_size"`                        // Размер
	Barcode           *string   `gorm:"column:barcode" json:"barcode"`                            // Бар-код
	TotalPrice        *float64  `gorm:"column:total_price" json:"total_price"`                    // Цена до согласованной итоговой скидки/промо/спп. Для получения цены со скидкой можно воспользоваться формулой priceWithDiscount = totalPrice * (1 - discountPercent/100)
	DiscountPercent   *int32    `gorm:"column:discount_percent" json:"discount_percent"`          // Согласованный итоговый дисконт
	IsSupply          *bool     `gorm:"column:is_supply" json:"is_supply"`                        // Договор поставки
	IsRealization     *bool     `gorm:"column:is_realization" json:"is_realization"`              // Договор реализации
	PromoCodeDiscount *float32  `gorm:"column:promo_code_discount" json:"promo_code_discount"`    // Скидка по промокоду
	WarehouseName     *string   `gorm:"column:warehouse_name" json:"warehouse_name"`              // Название склада отгрузки
	CountryName       *string   `gorm:"column:country_name" json:"country_name"`                  // Страна
	OblastOkrugName   *string   `gorm:"column:oblast_okrug_name" json:"oblast_okrug_name"`        // Область
	RegionName        *string   `gorm:"column:region_name" json:"region_name"`                    // Регион
	IncomeID          *int32    `gorm:"column:income_id" json:"income_id"`                        // Номер поставки (от продавца на склад)
	SaleID            *string   `gorm:"column:sale_id" json:"sale_id"`                            // Уникальный идентификатор продажи/возврата.
	Odid              *int32    `gorm:"column:odid" json:"odid"`                                  // Уникальный идентификатор позиции заказа
	Spp               *float64  `gorm:"column:spp" json:"spp"`                                    // Согласованная скидка постоянного покупателя
	ForPay            *float64  `gorm:"column:for_pay" json:"for_pay"`                            // К перечислению поставщику
	FinishedPrice     *float64  `gorm:"column:finished_price" json:"finished_price"`              // Фактическая цена заказа с учетом всех скидок
	PriceWithDisc     *float64  `gorm:"column:price_with_disc" json:"price_with_disc"`            // Цена, от которой считается вознаграждение поставщика forpay
	ExternalCode      *string   `gorm:"column:external_code" json:"external_code"`                // Код WB/OZON
	Subject           *string   `gorm:"column:subject" json:"subject"`                            // Предмет
	Category          *string   `gorm:"column:category" json:"category"`                          // Категория
	Brand             *string   `gorm:"column:brand" json:"brand"`                                // Бренд
	IsStorno          *bool     `gorm:"column:is_storno" json:"is_storno"`                        // Для сторно-операций 1, для остальных 0
	GNumber           *string   `gorm:"column:g_number" json:"g_number"`                          // Номер заказа. Объединяет все позиции одного заказа.
	Sticker           *string   `gorm:"column:sticker" json:"sticker"`                            // Цифровое значение стикера
	Srid              *string   `gorm:"column:srid" json:"srid"`                                  // Уникальный идентификатор заказа
}

// TableName Sale's table name
func (*Sale) TableName() string {
	return TableNameSale
}
