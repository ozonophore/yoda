// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"
)

const TableNameStock = "stock"

// Stock mapped from table <stock>
type StockItem struct {
	ID                 int64     `gorm:"column:id;primaryKey;autoIncrement:true" json:"id"`
	TransactionID      int64     `gorm:"column:transaction_id;not null" json:"transaction_id"`
	Source             string    `gorm:"column:source;not null" json:"source"`
	OwnerCode          string    `gorm:"not null"`
	LastChangeDate     time.Time `gorm:"column:last_change_date;not null" json:"last_change_date"`                 // Дата обновления информации в сервисе
	LastChangeTime     time.Time `gorm:"column:last_change_time;not null;serializer:time" json:"last_change_time"` // Время обновления информации в сервисе
	SupplierArticle    *string   `gorm:"column:supplier_article" json:"supplier_article"`                          // Артикул поставщика
	TechSize           *string   `gorm:"column:tech_size" json:"tech_size"`                                        // Размер
	Barcode            *string   `gorm:"column:barcode" json:"barcode"`                                            // Бар-код
	Quantity           int32     `gorm:"column:quantity;not null" json:"quantity"`                                 // Количество, доступное для продажи
	IsSupply           *bool     `gorm:"column:is_supply" json:"is_supply"`                                        // Договор поставки
	IsRealization      *bool     `gorm:"column:is_realization" json:"is_realization"`                              // Договор реализации
	QuantityFull       int32     `gorm:"column:quantity_full;not null" json:"quantity_full"`                       // Полное (непроданное) количество, которое числится за складом (= quantity + в пути)
	QuantityPromised   *int32    `gorm:"column:quantity_promised" json:"quantity_promised"`                        // Количество товара, указанное в подтверждённых будущих поставках
	WarehouseName      string    `gorm:"column:warehouse_name;not null" json:"warehouse_name"`                     // Название склада
	ExternalCode       *string   `gorm:"column:external_code" json:"external_code"`                                // Код WB/OZON
	Name               *string   `gorm:"column:name" json:"name"`                                                  // Наименование продукта
	Subject            *string   `gorm:"column:subject" json:"subject"`                                            // Предмет
	Category           *string   `gorm:"column:category" json:"category"`                                          // Категория
	DaysOnSite         *int32    `gorm:"column:days_on_site" json:"days_on_site"`                                  // Количество дней на сайте
	Brand              *string   `gorm:"column:brand" json:"brand"`                                                // Бренд
	SCCode             *string   `gorm:"column:SCCode" json:"SCCode"`                                              // Код контракта
	Price              *float64  `gorm:"column:price" json:"price"`                                                // Цена
	Discount           *float64  `gorm:"column:discount" json:"discount"`                                          // Скидка
	PriceAfterDiscount *float64  `gorm:"column:price_after_discount" json:"price_after_discount"`                  // Цена после скидки
	CardCreated        time.Time `gorm:"column:card_created;not null" json:"card_created"`                         //Дата создания карточки
}

// TableName Stock's table name
func (*StockItem) TableName() string {
	return TableNameStock
}
