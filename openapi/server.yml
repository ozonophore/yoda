openapi: 3.0.1
info:
  title: Servdr side
  version: '1.8'
components:
  schemas:
    Room:
        type: object
        properties:
          code:
            type: string
          name:
            type: string
          createdAt:
            type: string
            format: date-time
          ozon:
            type: object
            properties:
              clientId:
                type: string
              apiKey:
                type: string
          wb:
            type: object
            properties:
              authToken:
                type: string
        required:
            - name
            - code
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        startAtTime:
          type: string
          format: date-time
        lastRun:
          type: string
          format: date-time
        nextRun:
          type: string
          format: date-time
paths:
  /rooms:
    post:
      summary: Create room
      operationId: createRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update room
      operationId: updateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    get:
      summary: Get all rooms
      operationId: getRooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /rooms/{code}:
    get:
      summary: Get room by id
      operationId: getRoomById
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs:
    post:
      summary: Create job
      operationId: createJob
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get all jobs
      operationId: getJobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
  /jobs/{id}:
    get:
      summary: Get job by id
      operationId: getJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs/{id}/run:
    post:
      summary: Run job by id
      operationId: runJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs/{id}/stop:
    post:
      summary: Stop job by id
      operationId: stopJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
