openapi: 3.0.1
info:
  title: Servdr side
  version: '1.8'
components:
  schemas:
    Ozon:
      type: object
      properties:
        clientId:
          type: string
        apiKey:
          type: string
      required:
        - clientId
        - apiKey
    Wb:
      type: object
      properties:
        authToken:
          type: string
      required:
        - authToken
    NewRoom:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        ozon:
          $ref: '#/components/schemas/Ozon'
        wb:
          $ref: '#/components/schemas/Wb'
      required:
        - name
        - code
        - ozon
        - wb
    WeekDay:
      type: string
      enum:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday
    Room:
        type: object
        properties:
          code:
            type: string
          name:
            type: string
          createdAt:
            type: string
            format: date-time
          ozon:
            $ref: '#/components/schemas/Ozon'
          wb:
            $ref: '#/components/schemas/Wb'
          days:
            type: array
            items:
              $ref: '#/components/schemas/WeekDay'
          times:
            type: array
            items:
              type: string
              format: string
        required:
            - name
            - code
            - ozon
            - wb
            - days
            - times
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    JobLoader:
      type: object
      properties:
        weekDays:
          type: array
          items:
            $ref: '#/components/schemas/WeekDay'
        atTimes:
          type: array
          items:
            type: string
        nextRun:
          type: string
          format: date-time
        lastRun:
          type: string
          format: date-time
      required:
        - weekDays
        - atTimes
    JobAddLoader:
      type: object
      properties:
        interval:
          type: integer
        maxRuns:
          type: integer
    Job:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loader:
          $ref: '#/components/schemas/JobLoader'
        addLoader:
          $ref: '#/components/schemas/JobAddLoader'
        calcAggregates:
          $ref: '#/components/schemas/JobLoader'
      required:
        - id
        - loader
        - addLoader
        - calcAggregates
paths:
  /rooms:
    post:
      summary: Create room
      operationId: createRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRoom'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update room
      operationId: updateRoom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    get:
      summary: Get all rooms
      operationId: getRooms
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
  /rooms/{code}:
    get:
      summary: Get room by id
      operationId: getRoomById
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs:
    get:
      summary: Get all jobs
      operationId: getJobs
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
  /jobs/{id}:
    get:
      summary: Get job by id
      operationId: getJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs/{id}/run:
    post:
      summary: Run job by id
      operationId: runJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /jobs/{id}/stop:
    post:
      summary: Stop job by id
      operationId: stopJobById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
