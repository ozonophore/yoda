openapi: 3.0.0
info:
  contact:
    email:
    name: API Support
    url: http://www.swagger.io/support
  description:
  license:
    name: Apache 2.01111
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Open API
  version: "1.0"
servers:
  - url: /rest
security:
  - ApiKeyAuth: []
  - CookieAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    CookieAuth:
      type: apiKey
      in: cookie
      name: access_token
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorData'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthInfo'

  schemas:
    Marketplace:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        shortName:
          type: string
      required:
        - code
        - name
        - shortName
    Dictionaries:
      type: object
      properties:
        marketplaces:
          type: array
          items:
            $ref: '#/components/schemas/Marketplace'
      required:
        - marketplaces
    PageProductParams:
      type: object
      required:
        - source
        - limit
        - offset
      properties:
        filter:
          type: string
        source:
          type: array
          items:
              type: string
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
    ProductParams:
      type: object
      required:
        - dateFrom
        - dateTo
      properties:
        dateFrom:
          type: string
          format: date
        dateTo:
          type: string
          format: date
        filter:
          type: string
        limit:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        groupBy:
          type: string
          enum:
            - POSITION
    Permission:
      type: string
      enum:
        - HOME
        - DASHBOARD
        - PROFILE
        - SALES
        - ORDERS
        - DICTIONARY
    Stocks:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/Stock'
      required:
        - count
        - items
    Stock:
      type: object
      properties:
          organization:
            type: string
            description: Организация
          organization_id:
            type: string
            description: ID организации
          marketplace:
            type: string
            description: Торговая точка
          marketplace_id:
            type: string
            description: ID торговой точки
          barcode:
            type: string
            description: Штрихкод
          quantity:
            type: integer
            format: int32
            description: Stock quantity
      required:
          - organization
          - organization_id
          - marketplace
          - marketplace_id
          - barcode
          - quantity
    StocksFull:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/StockFull'
      required:
        - count
        - items
    StockFull:
      type: object
      properties:
        stockDate:
          type: string
          format: date-time
        source:
          type: string
        organization:
          type: string
          description: Организация
        supplierArticle:
          type: string
        barcode:
          type: string
        sku:
          type: string
        name:
          type: string
        brand:
          type: string
        warehouse:
          type: string
        quantity:
          type: number
          format: float
          description: Stock quantity
        price:
          type: number
          format: float
        priceWithDiscount:
          type: number
          format: float
      required:
        - organization
        - stockDate
        - source
        - supplierArticle
        - barcode
        - sku
        - name
        - brand
        - warehouse
        - quantity
        - price
        - priceWithDiscount
    OrderProducts:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
      required:
        - count
        - items
    Orders:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
        - count
        - items
    Order:
      type: object
      required:
        - id
        - source
        - org
        - supplierArticle
        - code1c
        - externalCode
        - name
        - barcode
        - brand
        - orderedQuantity
        - orderSum
        - balance
      properties:
        id:
          type: integer
          format: int32
        source:
          type: string
        org:
          type: string
        supplierArticle:
          type: string
        code1c:
          type: string
        externalCode:
          type: string
        name:
          type: string
        barcode:
          type: string
        brand:
          type: string
        orderedQuantity:
          type: integer
          format: int32
        orderSum:
          type: number
        balance:
          type: integer
          format: int32
    OrderProduct:
        type: object
        required:
            - id
            - source
            - org
            - supplierArticle
            - code1c
            - externalCode
            - name
            - barcode
            - brand
            - orderedQuantity
            - orderQuantityCanceled
            - orderQuantityDelivered
        properties:
            id:
              type: integer
              format: int32
            orderDate:
              type: string
            source:
              type: string
            org:
              type: string
            supplierArticle:
              type: string
            code1c:
              type: string
            externalCode:
              type: string
            name:
              type: string
            barcode:
              type: string
            brand:
              type: string
            orderedQuantity:
              type: integer
              format: int32
            orderQuantityCanceled:
              type: integer
              format: int32
            orderQuantityDelivered:
              type: integer
              format: int32
    Sales:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of saleses
        items:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
      required:
        - count
        - items
    Sale:
      type: object
      properties:
        id:
          type: integer
          format: int32
        source:
          type: string
        name:
          type: string
        supplierArticle:
          type: string
        externalCode:
          type: string
        code1c:
          type: string
        barcode:
          type: string
        oblast:
          type: string
        region:
          type: string
        country:
          type: string
        quantity:
          type: integer
          format: int32
        total_price:
          type: number
          format: double
      required:
        - id
        - source
        - name
        - supplierArticle
        - externalCode
        - code1c
        - barcode
        - oblast
        - region
        - country
        - quantity
        - total_price
    LoginInfo:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    ErrorData:
      type: object
      properties:
        success:
          type: boolean
        description:
          type: string
      required:
        - success
        - description
    AuthInfo:
      type: object
      properties:
        success:
          type: boolean
        access_token:
          type: string
        description:
          type: string
      required:
        - success
    Profile:
      type: object
      properties:
        email:
          description: Email пользователя
          type: string
        name:
          description: Имя пользователя
          type: string
        permissions:
          description: Права пользователя
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - name
        - permissions
        - email
    DictPosition:
        type: object
        properties:
            id:
              type: integer
              format: int32
              description: ID строки
            name:
                type: string
                description: Наименование позиции
            barcode:
                type: string
                description: Штрихкод
            org:
                type: string
                description: Организация
            code1c:
                type: string
                description: Код 1С
            marketplace:
                type: string
                description: Торговая точка
            marketplaceId:
                type: string
                description: Наименование точки
        required:
            - id
            - name
            - barcode
            - org
            - code1c
            - marketplace
            - marketplaceId
    DictPositions:
      type: object
      properties:
          count:
            type: integer
            format: int32
            description: Count of positions
          items:
            type: array
            items:
                $ref: '#/components/schemas/DictPosition'
      required:
          - count
          - items
    Warehouses:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of positions
        items:
          type: array
          items:
            $ref: '#/components/schemas/Warehouse'
      required:
        - count
        - items
    Warehouse:
      type: object
      properties:
        code:
            type: string
            description: Код склада
        cluster:
            type: string
            description: Наименование кластера
        source:
            type: string
            description: Источник
      required:
        - code
        - cluster
        - source
paths:
  /stocks/{date}:
    get:
      operationId: getStocks
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Дата (YYYY-MM-DD)
          in: path
          name: date
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
      summary: Получение остатков товаров
      tags:
        - Stocks

  /stocks/export:
    get:
      operationId: exportStocks
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - description: Дата (YYYY-MM-DD)
          in: query
          name: date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: source
          schema:
            type: array
            items:
              type: string
        - in: query
          name: filter
          schema:
            type: string
      description: Выгрузка отчета отстатоков за дату
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      summary: Получение остатков товаров
      tags:
        - Stocks

  /stocks:
    get:
      operationId: getStocksWithPages
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - description: Дата (YYYY-MM-DD)
          in: query
          name: date
          required: true
          schema:
            type: string
            format: date
        - in: query
          name: limit
          required: true
          schema:
            type: integer
        - in: query
          name: offset
          required: true
          schema:
            type: integer
        - in: query
          name: source
          schema:
              type: array
              items:
                type: string
        - in: query
          name: filter
          schema:
              type: string
      description: Получение отстатоков за дату
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StocksFull'
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
      summary: Получение остатков товаров
      tags:
        - Stocks


  /orders:
    get:
      description: Выгрузка заказа за день
      security:
        - ApiKeyAuth: [ ]
      operationId: getOrders
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
        - in: query
          name: page
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          required: true
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
          summary: Получение заказов за день
        401:
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Orders

  /orders/product:
    post:
      tags:
        - Orders
      description: Заказы по продукту
      security:
        - ApiKeyAuth: [ ]
      operationId: getOrdersProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductParams'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderProducts'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
          summary: Получение заказов за день
        418:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'
  /orders/product/report:
    post:
      tags:
        - Orders
      description: Выгрузка в excel заказов по продукту
      security:
        - ApiKeyAuth: [ ]
      operationId: exportOrdersProductToExcel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductParams'
      responses:
        200:
          description: Ok
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
          summary: Получение заказов за день
        418:
          $ref: '#/components/responses/Error'
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /orders/report:
    get:
      description: Выгрузка заказа за день
      security:
        - ApiKeyAuth: [ ]
      operationId: getOrdersReport
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - Orders

  /sales/report:
    get:
      description: Продажи за месяц
      security:
        - ApiKeyAuth: [ ]
      operationId: getSalesByMonthReport
      parameters:
        - in: query
          name: year
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: month
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - Saleses
  /sales:
    get:
      description: Продажи за месяц
      security:
        - CookieAuth: [ ]
      operationId: getSalesByMonthWithPagination
      parameters:
        - in: query
          name: year
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: month
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: page
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
        401:
          $ref: '#/components/responses/UnauthorizedError'
      tags:
          - Saleses

  /auth/login:
    post:
      description: Authetification
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthInfo'
      tags:
        - Auth

  /auth/refresh:
    get:
        description: Refresh token
        operationId: refresh
        security:
            - ApiKeyAuth: [ ]
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthInfo'
        tags:
            - Auth

  /auth/profile:
    get:
        description: Get profile
        operationId: profile
        security:
            - ApiKeyAuth: [ ]
        responses:
          200:
            description: OK
            content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Profile'
        tags:
            - Auth
  /dictionaries:
    get:
      description: Получение списка словарей
      operationId: getDictionaries
      security:
        - ApiKeyAuth: [ ]
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dictionaries'
      tags:
          - Dictionaries

  /dictionaries/positions:
    post:
      description: Получение списка позиций
      operationId: getPositions
      security:
        - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageProductParams'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictPositions'
      tags:
        - Dictionaries

  /dictionaries/clusters:
    get:
      operationId: getClusters
      parameters:
        - in: query
          name: filter
          schema:
            type: string
      tags:
        - Dictionaries
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /dictionaries/warehouses/export:
    get:
      description: Получение списка складов
      operationId: ExportWarehouses
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: query
          name: source
          required: true
          schema:
            type: array
            items:
              type: string
        - in: query
          name: cluster
          schema:
            type: string
        - in: query
          name: code
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - Dictionaries

  /dictionaries/warehouses:
    get:
      description: Получение списка складов
      operationId: getWarehouses
      security:
        - ApiKeyAuth: [ ]
      parameters:
        - in: query
          name: source
          schema:
            type: array
            items:
              type: string
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          schema:
              type: integer
              format: int32
        - in: query
          name: cluster
          schema:
            type: string
        - in: query
          name: code
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouses'
      tags:
        - Dictionaries
    post:
      description: Добавление кластера к существующему складу
      operationId: updateWarehouse
      security:
          - ApiKeyAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Warehouse'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warehouse'

      tags:
        - Dictionaries



