openapi: 3.0.0
info:
  contact:
    email:
    name: API Support
    url: http://www.swagger.io/support
  description:
  license:
    name: Apache 2.01111
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Open API
  version: "1.0"
servers:
  - url: /rest
security:
  - ApiKeyAuth: []
  - CookieAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-KEY
    CookieAuth:
      type: apiKey
      in: cookie
      name: access_token
  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthInfo'

  schemas:
    Permission:
      type: string
      enum:
        - HOME
        - DASHBOARD
        - PROFILE
        - SALES
        - ORDERS
    Stocks:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/Stock'
      required:
        - count
        - items
    Stock:
      type: object
      properties:
          organization:
            type: string
            description: Организация
          organization_id:
            type: string
            description: ID организации
          marketplace:
            type: string
            description: Торговая точка
          marketplace_id:
            type: string
            description: ID торговой точки
          barcode:
            type: string
            description: Штрихкод
          quantity:
            type: integer
            format: int32
            description: Stock quantity
      required:
          - organization
          - organization_id
          - marketplace
          - marketplace_id
          - barcode
          - quantity
    Orders:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of stocks
        items:
          type: array
          items:
            $ref: '#/components/schemas/Order'
      required:
        - count
        - items
    Order:
      type: object
      required:
        - id
        - source
        - supplierArticle
        - code1c
        - externalCode
        - name
        - barcode
        - brand
        - orderedQuantity
        - orderSum
        - balance
      properties:
        id:
          type: integer
          format: int32
        source:
          type: string
        supplierArticle:
          type: string
        code1c:
          type: string
        externalCode:
          type: string
        name:
          type: string
        barcode:
          type: string
        brand:
          type: string
        orderedQuantity:
          type: integer
          format: int32
        orderSum:
          type: number
        balance:
          type: integer
          format: int32
    Sales:
      type: object
      properties:
        count:
          type: integer
          format: int32
          description: Count of saleses
        items:
          type: array
          items:
            $ref: '#/components/schemas/Sale'
      required:
        - count
        - items
    Sale:
      type: object
      properties:
        id:
          type: integer
          format: int32
        source:
          type: string
        name:
          type: string
        supplierArticle:
          type: string
        externalCode:
          type: string
        code1c:
          type: string
        barcode:
          type: string
        oblast:
          type: string
        region:
          type: string
        country:
          type: string
        quantity:
          type: integer
          format: int32
        total_price:
          type: number
          format: double
      required:
        - id
        - source
        - name
        - supplierArticle
        - externalCode
        - code1c
        - barcode
        - oblast
        - region
        - country
        - quantity
        - total_price
    LoginInfo:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    AuthInfo:
      type: object
      properties:
        success:
          type: boolean
        access_token:
          type: string
        description:
          type: string
      required:
        - success
    Profile:
      type: object
      properties:
        email:
          description: Email пользователя
          type: string
        name:
          description: Имя пользователя
          type: string
        permissions:
          description: Права пользователя
          type: array
          items:
            $ref: '#/components/schemas/Permission'
      required:
        - name
        - permissions
        - email

paths:
  /stocks/{date}:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - description: Дата (YYYY-MM-DD)
          in: path
          name: date
          required: true
          schema:
            type: string
            format: date
      description: Получение отстатоков за дату
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stocks'
          description: OK
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
      summary: Получение остатков товаров
      tags:
        - Stocks

  /orders:
    get:
      description: Выгрузка заказа за день
      security:
        - ApiKeyAuth: [ ]
      operationId: getOrders
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
        - in: query
          name: page
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          required: true
          schema:
            type: integer
            format: int32
        - name: filter
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Orders'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
          summary: Получение заказов за день
        401:
          $ref: '#/components/responses/UnauthorizedError'
      tags:
        - Orders

  /orders/report:
    get:
      description: Выгрузка заказа за день
      security:
        - ApiKeyAuth: [ ]
      operationId: getOrdersReport
      parameters:
        - in: query
          name: date
          schema:
            type: string
            format: date
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - Orders

  /sales/report:
    get:
      description: Продажи за месяц
      security:
        - ApiKeyAuth: [ ]
      operationId: getSalesByMonthReport
      parameters:
        - in: query
          name: year
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: month
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - Saleses
  /sales:
    get:
      description: Продажи за месяц
      security:
        - CookieAuth: [ ]
      operationId: getSalesByMonthWithPagination
      parameters:
        - in: query
          name: year
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: month
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: page
          required: true
          schema:
            type: integer
            format: int32
        - in: query
          name: size
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
        401:
          $ref: '#/components/responses/UnauthorizedError'
      tags:
          - Saleses

  /auth/login:
    post:
      description: Authetification
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInfo'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthInfo'
      tags:
        - Auth

  /auth/refresh:
    get:
        description: Refresh token
        operationId: refresh
        security:
            - ApiKeyAuth: [ ]
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthInfo'
        tags:
            - Auth

  /auth/profile:
    get:
        description: Get profile
        operationId: profile
        security:
            - ApiKeyAuth: [ ]
        responses:
          200:
            description: OK
            content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/Profile'
        tags:
            - Auth



